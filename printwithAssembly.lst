     1                                  %include "io.mac"
     2                              <1> extern   proc_nwln, proc_PutCh, proc_PutStr
     3                              <1> extern   proc_GetStr, proc_GetCh
     4                              <1> extern   proc_PutInt, proc_GetInt
     5                              <1> extern   proc_PutLInt, proc_GetLInt
     6                              <1> 
     7                              <1> ;;-------------------------------------------------------------------
     8                              <1> %macro  .STARTUP  0
     9                              <1> ;group dgroup .data .bss
    10                              <1>         global   _start
    11                              <1> _start:
    12                              <1> %endmacro
    13                              <1> ;;-------------------------------------------------------------------
    14                              <1> 
    15                              <1> 
    16                              <1> ;;-------------------------------------------------------------------
    17                              <1> %macro  .EXIT  0
    18                              <1>         mov    EAX,1
    19                              <1>         xor    EBX,EBX
    20                              <1>         int    0x80
    21                              <1> %endmacro
    22                              <1> ;;-------------------------------------------------------------------
    23                              <1> 
    24                              <1> 
    25                              <1> ;;-------------------------------------------------------------------
    26                              <1> %macro  .DATA 0
    27                              <1>         segment .data
    28                              <1> %endmacro
    29                              <1> ;;-------------------------------------------------------------------
    30                              <1> 
    31                              <1> ;;-------------------------------------------------------------------
    32                              <1> %macro  .UDATA 0
    33                              <1>         segment .bss
    34                              <1> %endmacro
    35                              <1> ;;-------------------------------------------------------------------
    36                              <1> 
    37                              <1> ;;-------------------------------------------------------------------
    38                              <1> %macro  .CODE 0
    39                              <1>         segment .data
    40                              <1>         segment .bss
    41                              <1>         segment .text
    42                              <1> %endmacro
    43                              <1> ;;-------------------------------------------------------------------
    44                              <1> 
    45                              <1> 
    46                              <1> ;;-------------------------------------------------------------------
    47                              <1> %macro  nwln  0 
    48                              <1>         call    proc_nwln
    49                              <1> %endmacro
    50                              <1> ;;-------------------------------------------------------------------
    51                              <1> 
    52                              <1> 
    53                              <1> ;;-------------------------------------------------------------------
    54                              <1> %macro  PutCh  1 
    55                              <1>         push    AX
    56                              <1>         mov     AL,%1
    57                              <1>         call    proc_PutCh
    58                              <1>         pop     AX
    59                              <1> %endmacro
    60                              <1> ;;-------------------------------------------------------------------
    61                              <1> 
    62                              <1> 
    63                              <1> ;;-------------------------------------------------------------------
    64                              <1> %macro  PutStr  1 
    65                              <1>         push    ECX
    66                              <1>         mov     ECX,%1
    67                              <1>         call    proc_PutStr
    68                              <1>         pop     ECX
    69                              <1> %endmacro
    70                              <1> ;;-------------------------------------------------------------------
    71                              <1> 
    72                              <1> 
    73                              <1> ;;-------------------------------------------------------------------
    74                              <1> %macro  GetStr  1-2 81
    75                              <1>         push    ESI
    76                              <1>         push    EDI
    77                              <1>         mov     EDI,%1
    78                              <1>         mov     ESI,%2
    79                              <1>         call    proc_GetStr
    80                              <1>         pop     EDI
    81                              <1>         pop     ESI
    82                              <1> %endmacro
    83                              <1> ;;-------------------------------------------------------------------
    84                              <1> 
    85                              <1> 
    86                              <1> ;;-------------------------------------------------------------------
    87                              <1> %macro  GetCh   1
    88                              <1>         push    SI
    89                              <1>         xor     SI,SI
    90                              <1> %ifidni %1,AL
    91                              <1>         ;inc     SI
    92                              <1>         call    proc_GetCh
    93                              <1> %elifidni %1,AH
    94                              <1>         mov     SI,1
    95                              <1>         call    proc_GetCh
    96                              <1> %else
    97                              <1>         push    AX
    98                              <1>         call    proc_GetCh
    99                              <1>         mov     %1,AL
   100                              <1>         pop     AX
   101                              <1> %endif
   102                              <1>         pop     SI
   103                              <1> %endmacro
   104                              <1> ;;-------------------------------------------------------------------
   105                              <1> 
   106                              <1> 
   107                              <1> ;;-------------------------------------------------------------------
   108                              <1> %macro  PutInt  1
   109                              <1>         push    AX
   110                              <1>         mov     AX,%1
   111                              <1>         call    proc_PutInt
   112                              <1>         pop     AX
   113                              <1> %endmacro
   114                              <1> ;;-------------------------------------------------------------------
   115                              <1> 
   116                              <1> 
   117                              <1> ;;-------------------------------------------------------------------
   118                              <1> %macro  GetInt  1
   119                              <1> %ifnidni %1,AX
   120                              <1>         push    AX
   121                              <1>         call    proc_GetInt
   122                              <1>         mov     %1,AX
   123                              <1> 	  pop     AX
   124                              <1> %else 
   125                              <1>         call  proc_GetInt
   126                              <1> %endif
   127                              <1> %endmacro
   128                              <1> ;;-------------------------------------------------------------------
   129                              <1> 
   130                              <1> ;;-------------------------------------------------------------------
   131                              <1> %macro  PutLInt  1
   132                              <1>         push    EAX
   133                              <1>         mov     EAX,%1
   134                              <1>         call    proc_PutLInt
   135                              <1>         pop     EAX
   136                              <1> %endmacro
   137                              <1> ;;-------------------------------------------------------------------
   138                              <1> 
   139                              <1> ;;-------------------------------------------------------------------
   140                              <1> %macro  GetLInt  1
   141                              <1> %ifnidni %1,EAX
   142                              <1>         push    EAX
   143                              <1>         call    proc_GetLInt
   144                              <1>         mov     %1,EAX
   145                              <1> 	  pop     EAX
   146                              <1> %else 
   147                              <1>         call  proc_GetLInt
   148                              <1> %endif
   149                              <1> %endmacro
   150                              <1> ;;-------------------------------------------------------------------
   151                              <1> 
   152                                  
   153                                  .DATA
   154                              <1>  segment .data
   155 00000000 48656C6C6F20776F72-     prompt_msg1  db   "Hello world : ",0
   156 00000009 6C64203A2000       
   157                                  
   158                                  .CODE
   159                              <1>  segment .data
   160                              <1>  segment .bss
   161                              <1>  segment .text
   162                                        .STARTUP
   163                              <1> 
   164                              <1>  global _start
   165                              <1> _start:
   166                                        PutStr  prompt_msg1   ; request first number 
   167 00000000 51                  <1>  push ECX
   168 00000001 B9[00000000]        <1>  mov ECX,%1
   169 00000006 E8(00000000)        <1>  call proc_PutStr
   170 0000000B 59                  <1>  pop ECX
   171                                    nwln 
   172 0000000C E8(00000000)        <1>  call proc_nwln
   173                                  done:
   174                                        .EXIT
   175 00000011 B801000000          <1>  mov EAX,1
   176 00000016 31DB                <1>  xor EBX,EBX
   177 00000018 CD80                <1>  int 0x80
   178                                  
   179                                  
   180                                  
   181                                  
   182                                  
   183                                  
   184                                  
